version: 0.2
run-as: root

env:
  secrets-manager:
    ARNROLE: codebuild:arnrole

phases:

  install:
    commands:
      - git --version
      - echo Installing app dependencies...
      - chmod +x prereqs.sh
      - sh prereqs.sh
      - source ~/.bashrc
      - echo Check kubectl version
      - kubectl version --short --client
      - echo Installing git-crypt...
      - curl https://www.agwa.name/projects/git-crypt/downloads/git-crypt-0.6.0.tar.gz --output git-crypt.tar.gz
      - tar xvzf git-crypt.tar.gz -C .
      - cd git-crypt-0.6.0
      - make
      - make install
      - cd ..
      - echo Downloading the key to decrypt the files
      - aws s3 cp s3://s3-mattermost-iv/mattermost-key.kbx mattermost-key.kbx
      - echo Decrypting the files
      - git clone https://github.com/lucasscheepers/mattermost.git
      - cd mattermost
      - git-crypt unlock ../mattermost-key.kbx
      - cp mattermost-installation.yml ../mattermost-installation.yml
      - cp mattermost-secrets.yml ../mattermost-secrets.yml
      - cd ..

  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region eu-west-2 update-kubeconfig --name prod-cluster
      - aws eks update-kubeconfig --name prod-cluster --region eu-west-2 --role-arn $ARNROLE
      - echo Check config
      - kubectl config view
      - echo Check kubectl access
      - kubectl get svc

  post_build:
    commands:
      - echo Push the latest image to cluster
      - kubectl apply -n mattermost-operator -f mattermost-operator.yml
      - kubectl apply -n ind-iv -f mattermost-secrets.yml
      - kubectl delete -n ind-iv -f mattermost-installation.yml
      - kubectl apply -n ind-iv -f mattermost-installation.yml
      # - kubectl rollout restart -n ind-iv -f mattermost-installation.yml
